INFO 08-04 03:44:07 api_server.py:219] vLLM API server version 0.5.3
INFO 08-04 03:44:07 api_server.py:220] args: Namespace(model_tag='google/gemma-1.1-2b-it', host='localhost', port=8964, uvicorn_log_level='info', allow_credentials=False, allowed_origins=['*'], allowed_methods=['*'], allowed_headers=['*'], api_key='eva', lora_modules=None, prompt_adapters=None, chat_template=None, response_role='assistant', ssl_keyfile=None, ssl_certfile=None, ssl_ca_certs=None, ssl_cert_reqs=0, root_path=None, middleware=[], model='google/gemma-1.1-2b-it', tokenizer=None, skip_tokenizer_init=False, revision=None, code_revision=None, tokenizer_revision=None, tokenizer_mode='auto', trust_remote_code=False, download_dir=None, load_format='auto', dtype='float16', kv_cache_dtype='auto', quantization_param_path=None, max_model_len=None, guided_decoding_backend='outlines', distributed_executor_backend=None, worker_use_ray=False, pipeline_parallel_size=1, tensor_parallel_size=8, max_parallel_loading_workers=None, ray_workers_use_nsight=False, block_size=16, enable_prefix_caching=False, disable_sliding_window=False, use_v2_block_manager=False, num_lookahead_slots=0, seed=0, swap_space=4, cpu_offload_gb=0, gpu_memory_utilization=0.9, num_gpu_blocks_override=None, max_num_batched_tokens=None, max_num_seqs=256, max_logprobs=20, disable_log_stats=False, quantization=None, rope_scaling=None, rope_theta=None, enforce_eager=False, max_context_len_to_capture=None, max_seq_len_to_capture=8192, disable_custom_all_reduce=False, tokenizer_pool_size=0, tokenizer_pool_type='ray', tokenizer_pool_extra_config=None, enable_lora=False, max_loras=1, max_lora_rank=16, lora_extra_vocab_size=256, lora_dtype='auto', long_lora_scaling_factors=None, max_cpu_loras=None, fully_sharded_loras=False, enable_prompt_adapter=False, max_prompt_adapters=1, max_prompt_adapter_token=0, device='auto', scheduler_delay_factor=0.0, enable_chunked_prefill=None, speculative_model=None, num_speculative_tokens=None, speculative_draft_tensor_parallel_size=None, speculative_max_model_len=None, speculative_disable_by_batch_size=None, ngram_prompt_lookup_max=None, ngram_prompt_lookup_min=None, spec_decoding_acceptance_method='rejection_sampler', typical_acceptance_sampler_posterior_threshold=None, typical_acceptance_sampler_posterior_alpha=None, disable_logprobs_during_spec_decoding=None, model_loader_extra_config=None, ignore_patterns=[], preemption_mode=None, served_model_name=None, qlora_adapter_name_or_path=None, otlp_traces_endpoint=None, engine_use_ray=False, disable_log_requests=False, max_log_len=None, dispatch_function=<function serve at 0x7f15c6784b80>)
WARNING 08-04 03:44:07 config.py:1434] Casting torch.bfloat16 to torch.float16.
INFO 08-04 03:44:07 config.py:724] Defaulting to use mp for distributed inference
INFO 08-04 03:44:07 llm_engine.py:176] Initializing an LLM engine (v0.5.3) with config: model='google/gemma-1.1-2b-it', speculative_config=None, tokenizer='google/gemma-1.1-2b-it', skip_tokenizer_init=False, tokenizer_mode=auto, revision=None, rope_scaling=None, rope_theta=None, tokenizer_revision=None, trust_remote_code=False, dtype=torch.float16, max_seq_len=8192, download_dir=None, load_format=LoadFormat.AUTO, tensor_parallel_size=8, pipeline_parallel_size=1, disable_custom_all_reduce=False, quantization=None, enforce_eager=False, kv_cache_dtype=auto, quantization_param_path=None, device_config=cuda, decoding_config=DecodingConfig(guided_decoding_backend='outlines'), observability_config=ObservabilityConfig(otlp_traces_endpoint=None), seed=0, served_model_name=google/gemma-1.1-2b-it, use_v2_block_manager=False, enable_prefix_caching=False)
INFO 08-04 03:44:08 custom_cache_manager.py:17] Setting Triton cache manager to: vllm.triton_utils.custom_cache_manager:CustomCacheManager
[1;36m(VllmWorkerProcess pid=3665308)[0;0m INFO 08-04 03:44:08 selector.py:54] Using XFormers backend.
[1;36m(VllmWorkerProcess pid=3665311)[0;0m INFO 08-04 03:44:08 selector.py:54] Using XFormers backend.
[1;36m(VllmWorkerProcess pid=3665307)[0;0m INFO 08-04 03:44:08 selector.py:54] Using XFormers backend.
[1;36m(VllmWorkerProcess pid=3665315)[0;0m INFO 08-04 03:44:08 selector.py:54] Using XFormers backend.
[1;36m(VllmWorkerProcess pid=3665319)[0;0m INFO 08-04 03:44:08 selector.py:54] Using XFormers backend.
INFO 08-04 03:44:08 selector.py:54] Using XFormers backend.
[1;36m(VllmWorkerProcess pid=3665323)[0;0m INFO 08-04 03:44:08 selector.py:54] Using XFormers backend.
[1;36m(VllmWorkerProcess pid=3665331)[0;0m INFO 08-04 03:44:08 selector.py:54] Using XFormers backend.
[1;36m(VllmWorkerProcess pid=3665331)[0;0m INFO 08-04 03:44:11 multiproc_worker_utils.py:215] Worker ready; awaiting tasks
[1;36m(VllmWorkerProcess pid=3665311)[0;0m INFO 08-04 03:44:11 multiproc_worker_utils.py:215] Worker ready; awaiting tasks
[1;36m(VllmWorkerProcess pid=3665307)[0;0m INFO 08-04 03:44:11 multiproc_worker_utils.py:215] Worker ready; awaiting tasks
[1;36m(VllmWorkerProcess pid=3665319)[0;0m INFO 08-04 03:44:11 multiproc_worker_utils.py:215] Worker ready; awaiting tasks
[1;36m(VllmWorkerProcess pid=3665315)[0;0m INFO 08-04 03:44:11 multiproc_worker_utils.py:215] Worker ready; awaiting tasks
[1;36m(VllmWorkerProcess pid=3665308)[0;0m INFO 08-04 03:44:11 multiproc_worker_utils.py:215] Worker ready; awaiting tasks
[1;36m(VllmWorkerProcess pid=3665323)[0;0m INFO 08-04 03:44:11 multiproc_worker_utils.py:215] Worker ready; awaiting tasks
[1;36m(VllmWorkerProcess pid=3665311)[0;0m INFO 08-04 03:44:13 utils.py:784] Found nccl from library libnccl.so.2
[1;36m(VllmWorkerProcess pid=3665311)[0;0m INFO 08-04 03:44:13 pynccl.py:63] vLLM is using nccl==2.20.5
[1;36m(VllmWorkerProcess pid=3665308)[0;0m INFO 08-04 03:44:13 utils.py:784] Found nccl from library libnccl.so.2
[1;36m(VllmWorkerProcess pid=3665307)[0;0m INFO 08-04 03:44:13 utils.py:784] Found nccl from library libnccl.so.2
[1;36m(VllmWorkerProcess pid=3665308)[0;0m INFO 08-04 03:44:13 pynccl.py:63] vLLM is using nccl==2.20.5
INFO 08-04 03:44:13 utils.py:784] Found nccl from library libnccl.so.2
[1;36m(VllmWorkerProcess pid=3665315)[0;0m INFO 08-04 03:44:13 utils.py:784] Found nccl from library libnccl.so.2
[1;36m(VllmWorkerProcess pid=3665307)[0;0m INFO 08-04 03:44:13 pynccl.py:63] vLLM is using nccl==2.20.5
INFO 08-04 03:44:13 pynccl.py:63] vLLM is using nccl==2.20.5
[1;36m(VllmWorkerProcess pid=3665319)[0;0m INFO 08-04 03:44:13 utils.py:784] Found nccl from library libnccl.so.2
[1;36m(VllmWorkerProcess pid=3665331)[0;0m INFO 08-04 03:44:13 utils.py:784] Found nccl from library libnccl.so.2
[1;36m(VllmWorkerProcess pid=3665315)[0;0m INFO 08-04 03:44:13 pynccl.py:63] vLLM is using nccl==2.20.5
[1;36m(VllmWorkerProcess pid=3665319)[0;0m INFO 08-04 03:44:13 pynccl.py:63] vLLM is using nccl==2.20.5
[1;36m(VllmWorkerProcess pid=3665331)[0;0m INFO 08-04 03:44:13 pynccl.py:63] vLLM is using nccl==2.20.5
[1;36m(VllmWorkerProcess pid=3665323)[0;0m INFO 08-04 03:44:13 utils.py:784] Found nccl from library libnccl.so.2
[1;36m(VllmWorkerProcess pid=3665323)[0;0m INFO 08-04 03:44:13 pynccl.py:63] vLLM is using nccl==2.20.5
[1;36m(VllmWorkerProcess pid=3665323)[0;0m WARNING 08-04 03:44:14 custom_all_reduce.py:118] Custom allreduce is disabled because it's not supported on more than two PCIe-only GPUs. To silence this warning, specify disable_custom_all_reduce=True explicitly.
[1;36m(VllmWorkerProcess pid=3665311)[0;0m WARNING 08-04 03:44:14 custom_all_reduce.py:118] Custom allreduce is disabled because it's not supported on more than two PCIe-only GPUs. To silence this warning, specify disable_custom_all_reduce=True explicitly.
[1;36m(VllmWorkerProcess pid=3665315)[0;0m WARNING 08-04 03:44:14 custom_all_reduce.py:118] Custom allreduce is disabled because it's not supported on more than two PCIe-only GPUs. To silence this warning, specify disable_custom_all_reduce=True explicitly.
[1;36m(VllmWorkerProcess pid=3665331)[0;0m WARNING 08-04 03:44:14 custom_all_reduce.py:118] Custom allreduce is disabled because it's not supported on more than two PCIe-only GPUs. To silence this warning, specify disable_custom_all_reduce=True explicitly.
[1;36m(VllmWorkerProcess pid=3665307)[0;0m WARNING 08-04 03:44:14 custom_all_reduce.py:118] Custom allreduce is disabled because it's not supported on more than two PCIe-only GPUs. To silence this warning, specify disable_custom_all_reduce=True explicitly.
WARNING 08-04 03:44:14 custom_all_reduce.py:118] Custom allreduce is disabled because it's not supported on more than two PCIe-only GPUs. To silence this warning, specify disable_custom_all_reduce=True explicitly.
[1;36m(VllmWorkerProcess pid=3665319)[0;0m WARNING 08-04 03:44:14 custom_all_reduce.py:118] Custom allreduce is disabled because it's not supported on more than two PCIe-only GPUs. To silence this warning, specify disable_custom_all_reduce=True explicitly.
[1;36m(VllmWorkerProcess pid=3665308)[0;0m WARNING 08-04 03:44:14 custom_all_reduce.py:118] Custom allreduce is disabled because it's not supported on more than two PCIe-only GPUs. To silence this warning, specify disable_custom_all_reduce=True explicitly.
INFO 08-04 03:44:14 shm_broadcast.py:241] vLLM message queue communication handle: Handle(connect_ip='127.0.0.1', local_reader_ranks=[1, 2, 3, 4, 5, 6, 7], buffer=<vllm.distributed.device_communicators.shm_broadcast.ShmRingBuffer object at 0x7f164a436620>, local_subscribe_port=47433, local_sync_port=56547, remote_subscribe_port=None, remote_sync_port=None)
[1;36m(VllmWorkerProcess pid=3665307)[0;0m INFO 08-04 03:44:14 model_runner.py:680] Starting to load model google/gemma-1.1-2b-it...
[1;36m(VllmWorkerProcess pid=3665308)[0;0m INFO 08-04 03:44:14 model_runner.py:680] Starting to load model google/gemma-1.1-2b-it...
[1;36m(VllmWorkerProcess pid=3665311)[0;0m INFO 08-04 03:44:14 model_runner.py:680] Starting to load model google/gemma-1.1-2b-it...
INFO 08-04 03:44:14 model_runner.py:680] Starting to load model google/gemma-1.1-2b-it...
[1;36m(VllmWorkerProcess pid=3665315)[0;0m INFO 08-04 03:44:14 model_runner.py:680] Starting to load model google/gemma-1.1-2b-it...
[1;36m(VllmWorkerProcess pid=3665319)[0;0m INFO 08-04 03:44:14 model_runner.py:680] Starting to load model google/gemma-1.1-2b-it...
[1;36m(VllmWorkerProcess pid=3665323)[0;0m INFO 08-04 03:44:14 model_runner.py:680] Starting to load model google/gemma-1.1-2b-it...
[1;36m(VllmWorkerProcess pid=3665331)[0;0m INFO 08-04 03:44:14 model_runner.py:680] Starting to load model google/gemma-1.1-2b-it...
[1;36m(VllmWorkerProcess pid=3665311)[0;0m INFO 08-04 03:44:14 selector.py:54] Using XFormers backend.
[1;36m(VllmWorkerProcess pid=3665323)[0;0m INFO 08-04 03:44:14 selector.py:54] Using XFormers backend.
[1;36m(VllmWorkerProcess pid=3665319)[0;0m INFO 08-04 03:44:14 selector.py:54] Using XFormers backend.
[1;36m(VllmWorkerProcess pid=3665331)[0;0m INFO 08-04 03:44:14 selector.py:54] Using XFormers backend.
INFO 08-04 03:44:14 selector.py:54] Using XFormers backend.
[1;36m(VllmWorkerProcess pid=3665307)[0;0m INFO 08-04 03:44:14 selector.py:54] Using XFormers backend.
[1;36m(VllmWorkerProcess pid=3665315)[0;0m INFO 08-04 03:44:14 selector.py:54] Using XFormers backend.
[1;36m(VllmWorkerProcess pid=3665308)[0;0m INFO 08-04 03:44:15 selector.py:54] Using XFormers backend.
INFO 08-04 03:44:15 weight_utils.py:223] Using model weights format ['*.safetensors']
[1;36m(VllmWorkerProcess pid=3665323)[0;0m INFO 08-04 03:44:15 weight_utils.py:223] Using model weights format ['*.safetensors']
[1;36m(VllmWorkerProcess pid=3665311)[0;0m INFO 08-04 03:44:15 weight_utils.py:223] Using model weights format ['*.safetensors']
[1;36m(VllmWorkerProcess pid=3665319)[0;0m INFO 08-04 03:44:15 weight_utils.py:223] Using model weights format ['*.safetensors']
[1;36m(VllmWorkerProcess pid=3665331)[0;0m INFO 08-04 03:44:15 weight_utils.py:223] Using model weights format ['*.safetensors']
[1;36m(VllmWorkerProcess pid=3665315)[0;0m INFO 08-04 03:44:15 weight_utils.py:223] Using model weights format ['*.safetensors']
[1;36m(VllmWorkerProcess pid=3665307)[0;0m INFO 08-04 03:44:15 weight_utils.py:223] Using model weights format ['*.safetensors']
[1;36m(VllmWorkerProcess pid=3665308)[0;0m INFO 08-04 03:44:15 weight_utils.py:223] Using model weights format ['*.safetensors']
Loading safetensors checkpoint shards:   0% Completed | 0/2 [00:00<?, ?it/s]
Loading safetensors checkpoint shards: 100% Completed | 2/2 [00:00<00:00,  6.84it/s]
Loading safetensors checkpoint shards: 100% Completed | 2/2 [00:00<00:00,  6.82it/s]

INFO 08-04 03:44:15 model_runner.py:692] Loading model weights took 0.6994 GB
[1;36m(VllmWorkerProcess pid=3665315)[0;0m INFO 08-04 03:44:16 model_runner.py:692] Loading model weights took 0.6994 GB
[1;36m(VllmWorkerProcess pid=3665308)[0;0m INFO 08-04 03:44:18 model_runner.py:692] Loading model weights took 0.6994 GB
[1;36m(VllmWorkerProcess pid=3665307)[0;0m INFO 08-04 03:44:21 model_runner.py:692] Loading model weights took 0.6994 GB
[1;36m(VllmWorkerProcess pid=3665311)[0;0m INFO 08-04 03:44:22 model_runner.py:692] Loading model weights took 0.6994 GB
[1;36m(VllmWorkerProcess pid=3665331)[0;0m INFO 08-04 03:44:22 model_runner.py:692] Loading model weights took 0.6994 GB
[1;36m(VllmWorkerProcess pid=3665323)[0;0m INFO 08-04 03:44:22 model_runner.py:692] Loading model weights took 0.6994 GB
[1;36m(VllmWorkerProcess pid=3665319)[0;0m INFO 08-04 03:44:22 model_runner.py:692] Loading model weights took 0.6994 GB
INFO 08-04 03:44:24 distributed_gpu_executor.py:56] # GPU blocks: 134319, # CPU blocks: 14563
[1;36m(VllmWorkerProcess pid=3665315)[0;0m INFO 08-04 03:44:30 model_runner.py:980] Capturing the model for CUDA graphs. This may lead to unexpected consequences if the model is not static. To run the model in eager mode, set 'enforce_eager=True' or use '--enforce-eager' in the CLI.
[1;36m(VllmWorkerProcess pid=3665315)[0;0m INFO 08-04 03:44:30 model_runner.py:984] CUDA graphs can take additional 1~3 GiB memory per GPU. If you are running out of memory, consider decreasing `gpu_memory_utilization` or enforcing eager mode. You can also reduce the `max_num_seqs` as needed to decrease memory usage.
[1;36m(VllmWorkerProcess pid=3665308)[0;0m INFO 08-04 03:44:30 model_runner.py:980] Capturing the model for CUDA graphs. This may lead to unexpected consequences if the model is not static. To run the model in eager mode, set 'enforce_eager=True' or use '--enforce-eager' in the CLI.
[1;36m(VllmWorkerProcess pid=3665308)[0;0m INFO 08-04 03:44:30 model_runner.py:984] CUDA graphs can take additional 1~3 GiB memory per GPU. If you are running out of memory, consider decreasing `gpu_memory_utilization` or enforcing eager mode. You can also reduce the `max_num_seqs` as needed to decrease memory usage.
[1;36m(VllmWorkerProcess pid=3665311)[0;0m INFO 08-04 03:44:30 model_runner.py:980] Capturing the model for CUDA graphs. This may lead to unexpected consequences if the model is not static. To run the model in eager mode, set 'enforce_eager=True' or use '--enforce-eager' in the CLI.
[1;36m(VllmWorkerProcess pid=3665311)[0;0m INFO 08-04 03:44:30 model_runner.py:984] CUDA graphs can take additional 1~3 GiB memory per GPU. If you are running out of memory, consider decreasing `gpu_memory_utilization` or enforcing eager mode. You can also reduce the `max_num_seqs` as needed to decrease memory usage.
INFO 08-04 03:44:30 model_runner.py:980] Capturing the model for CUDA graphs. This may lead to unexpected consequences if the model is not static. To run the model in eager mode, set 'enforce_eager=True' or use '--enforce-eager' in the CLI.
INFO 08-04 03:44:30 model_runner.py:984] CUDA graphs can take additional 1~3 GiB memory per GPU. If you are running out of memory, consider decreasing `gpu_memory_utilization` or enforcing eager mode. You can also reduce the `max_num_seqs` as needed to decrease memory usage.
[1;36m(VllmWorkerProcess pid=3665319)[0;0m INFO 08-04 03:44:30 model_runner.py:980] Capturing the model for CUDA graphs. This may lead to unexpected consequences if the model is not static. To run the model in eager mode, set 'enforce_eager=True' or use '--enforce-eager' in the CLI.
[1;36m(VllmWorkerProcess pid=3665319)[0;0m INFO 08-04 03:44:30 model_runner.py:984] CUDA graphs can take additional 1~3 GiB memory per GPU. If you are running out of memory, consider decreasing `gpu_memory_utilization` or enforcing eager mode. You can also reduce the `max_num_seqs` as needed to decrease memory usage.
[1;36m(VllmWorkerProcess pid=3665307)[0;0m INFO 08-04 03:44:30 model_runner.py:980] Capturing the model for CUDA graphs. This may lead to unexpected consequences if the model is not static. To run the model in eager mode, set 'enforce_eager=True' or use '--enforce-eager' in the CLI.
[1;36m(VllmWorkerProcess pid=3665307)[0;0m INFO 08-04 03:44:30 model_runner.py:984] CUDA graphs can take additional 1~3 GiB memory per GPU. If you are running out of memory, consider decreasing `gpu_memory_utilization` or enforcing eager mode. You can also reduce the `max_num_seqs` as needed to decrease memory usage.
[1;36m(VllmWorkerProcess pid=3665323)[0;0m INFO 08-04 03:44:30 model_runner.py:980] Capturing the model for CUDA graphs. This may lead to unexpected consequences if the model is not static. To run the model in eager mode, set 'enforce_eager=True' or use '--enforce-eager' in the CLI.
[1;36m(VllmWorkerProcess pid=3665323)[0;0m INFO 08-04 03:44:30 model_runner.py:984] CUDA graphs can take additional 1~3 GiB memory per GPU. If you are running out of memory, consider decreasing `gpu_memory_utilization` or enforcing eager mode. You can also reduce the `max_num_seqs` as needed to decrease memory usage.
[1;36m(VllmWorkerProcess pid=3665331)[0;0m INFO 08-04 03:44:30 model_runner.py:980] Capturing the model for CUDA graphs. This may lead to unexpected consequences if the model is not static. To run the model in eager mode, set 'enforce_eager=True' or use '--enforce-eager' in the CLI.
[1;36m(VllmWorkerProcess pid=3665331)[0;0m INFO 08-04 03:44:30 model_runner.py:984] CUDA graphs can take additional 1~3 GiB memory per GPU. If you are running out of memory, consider decreasing `gpu_memory_utilization` or enforcing eager mode. You can also reduce the `max_num_seqs` as needed to decrease memory usage.
[1;36m(VllmWorkerProcess pid=3665315)[0;0m INFO 08-04 03:44:50 model_runner.py:1181] Graph capturing finished in 21 secs.
INFO 08-04 03:44:50 model_runner.py:1181] Graph capturing finished in 20 secs.
[1;36m(VllmWorkerProcess pid=3665311)[0;0m INFO 08-04 03:44:50 model_runner.py:1181] Graph capturing finished in 20 secs.
[1;36m(VllmWorkerProcess pid=3665319)[0;0m INFO 08-04 03:44:50 model_runner.py:1181] Graph capturing finished in 20 secs.
[1;36m(VllmWorkerProcess pid=3665331)[0;0m INFO 08-04 03:44:50 model_runner.py:1181] Graph capturing finished in 20 secs.
[1;36m(VllmWorkerProcess pid=3665307)[0;0m INFO 08-04 03:44:50 model_runner.py:1181] Graph capturing finished in 20 secs.
[1;36m(VllmWorkerProcess pid=3665308)[0;0m INFO 08-04 03:44:50 model_runner.py:1181] Graph capturing finished in 21 secs.
[1;36m(VllmWorkerProcess pid=3665323)[0;0m INFO 08-04 03:44:50 model_runner.py:1181] Graph capturing finished in 20 secs.
WARNING 08-04 03:44:51 serving_embedding.py:170] embedding_mode is False. Embedding API will not work.
INFO 08-04 03:44:51 api_server.py:292] Available routes are:
INFO 08-04 03:44:51 api_server.py:297] Route: /openapi.json, Methods: GET, HEAD
INFO 08-04 03:44:51 api_server.py:297] Route: /docs, Methods: GET, HEAD
INFO 08-04 03:44:51 api_server.py:297] Route: /docs/oauth2-redirect, Methods: GET, HEAD
INFO 08-04 03:44:51 api_server.py:297] Route: /redoc, Methods: GET, HEAD
INFO 08-04 03:44:51 api_server.py:297] Route: /health, Methods: GET
INFO 08-04 03:44:51 api_server.py:297] Route: /tokenize, Methods: POST
INFO 08-04 03:44:51 api_server.py:297] Route: /detokenize, Methods: POST
INFO 08-04 03:44:51 api_server.py:297] Route: /v1/models, Methods: GET
INFO 08-04 03:44:51 api_server.py:297] Route: /version, Methods: GET
INFO 08-04 03:44:51 api_server.py:297] Route: /v1/chat/completions, Methods: POST
INFO 08-04 03:44:51 api_server.py:297] Route: /v1/completions, Methods: POST
INFO 08-04 03:44:51 api_server.py:297] Route: /v1/embeddings, Methods: POST
INFO:     Started server process [3665017]
INFO:     Waiting for application startup.
INFO:     Application startup complete.
INFO:     Uvicorn running on http://localhost:8964 (Press CTRL+C to quit)
INFO 08-04 03:45:01 metrics.py:396] Avg prompt throughput: 0.0 tokens/s, Avg generation throughput: 0.0 tokens/s, Running: 0 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 0.0%, CPU KV cache usage: 0.0%.
INFO 08-04 03:45:11 metrics.py:396] Avg prompt throughput: 0.0 tokens/s, Avg generation throughput: 0.0 tokens/s, Running: 0 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 0.0%, CPU KV cache usage: 0.0%.
INFO 08-04 03:45:21 metrics.py:396] Avg prompt throughput: 0.0 tokens/s, Avg generation throughput: 0.0 tokens/s, Running: 0 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 0.0%, CPU KV cache usage: 0.0%.
INFO 08-04 03:45:31 metrics.py:396] Avg prompt throughput: 0.0 tokens/s, Avg generation throughput: 0.0 tokens/s, Running: 0 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 0.0%, CPU KV cache usage: 0.0%.
INFO 08-04 03:45:41 metrics.py:396] Avg prompt throughput: 0.0 tokens/s, Avg generation throughput: 0.0 tokens/s, Running: 0 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 0.0%, CPU KV cache usage: 0.0%.
INFO 08-04 03:45:51 metrics.py:396] Avg prompt throughput: 0.0 tokens/s, Avg generation throughput: 0.0 tokens/s, Running: 0 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 0.0%, CPU KV cache usage: 0.0%.
INFO 08-04 03:46:01 metrics.py:396] Avg prompt throughput: 0.0 tokens/s, Avg generation throughput: 0.0 tokens/s, Running: 0 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 0.0%, CPU KV cache usage: 0.0%.
INFO:     Shutting down
INFO:     Waiting for application shutdown.
INFO:     Application shutdown complete.
INFO:     Finished server process [3665017]
ERROR 08-04 03:46:05 multiproc_worker_utils.py:120] Worker VllmWorkerProcess pid 3665311 died, exit code: -15
INFO 08-04 03:46:05 multiproc_worker_utils.py:123] Killing local vLLM worker processes
/nethome/hsun409/anaconda3/envs/llm_env_new/lib/python3.10/multiprocessing/resource_tracker.py:224: UserWarning: resource_tracker: There appear to be 1 leaked shared_memory objects to clean up at shutdown
  warnings.warn('resource_tracker: There appear to be %d '
